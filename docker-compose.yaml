version: '3.8'

services:

    db:
        build: .docker/postgres
        container_name: micro-videos-db
        restart: always
        env_file:
            - .env
        tty: true
        ports:
            - 5432:5432
        volumes:
            - .docker/postgres/db:/var/lib/postgresql/data:z
        environment:
            - POSTGRES_DB=code_micro_videos
            - POSTGRES_USER=postgres
            - POSTGRES_PASSWORD=root
        networks:
            - app-network

    app:
        build: .
        container_name: micro-videos-app
        entrypoint: ./entrypoint.sh
        # entrypoint: dockerize -wait tcp://db:5432 -timeout 120s ./entrypoint.sh
        environment:
            - DB_HOST=db
            - DB_DATABASE=code_micro_videos
            - DB_USERNAME=postgres
            - DB_PASSWORD=root
        volumes:
            - .:/usr/app:z
            - /usr/app/node_modules
        networks:
            - app-network
        depends_on:
            - db
            - redis

    nginx:
        build: .docker/nginx
        container_name: micro-videos-nginx
        restart: always
        tty: true
        ports:
            - "8000:80"
        volumes:
            - .:/var/www:z
        networks:
            - app-network
        depends_on:
            - app

    

    redis:
        image: redis:alpine
        container_name: micro-videos-redis
        expose:
            - 6379
        networks:
            - app-network

networks:
    app-network:
        driver: bridge